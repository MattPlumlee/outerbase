[{"path":"https://mattplumlee.github.io/outerbase/articles/basebasics.html","id":"covariance-functions","dir":"Articles","previous_headings":"","what":"Covariance functions","title":"Base walkthrough","text":"","code":"sampsize = 20 d = 3 design1d = seq(1/(2*sampsize),1-1/(2*sampsize),1/sampsize) x = cbind(design1d,sample(design1d),sample(design1d)) y = obtest_borehole3d(x) testsampsize = 100 xtest = matrix(runif(testsampsize*d),ncol=d) #prediction points ytest = obtest_borehole3d(xtest) corf1 = new(covf_mat25) ?covf_mat25 cormat1 = corf1$cov(x[,1],x[,1]) print(cormat1[1:5,1:5]) #>           [,1]      [,2]      [,3]      [,4]      [,5] #> [1,] 1.0000000 0.9995836 0.9983373 0.9962695 0.9933933 #> [2,] 0.9995836 1.0000000 0.9995836 0.9983373 0.9962695 #> [3,] 0.9983373 0.9995836 1.0000000 0.9995836 0.9983373 #> [4,] 0.9962695 0.9983373 0.9995836 1.0000000 0.9995836 #> [5,] 0.9933933 0.9962695 0.9983373 0.9995836 1.0000000 corf1$hyp #>      [,1] #> [1,]    0 par(mfrow = c(1, 2)) plot(x[,1],corf1$cov(x[,1],0.5), type='l') corf1$hyp = c(-0.5) plot(x[,1],corf1$cov(x[,1],0.5), type='l')"},{"path":"https://mattplumlee.github.io/outerbase/articles/basebasics.html","id":"gaussian-processes","dir":"Articles","previous_headings":"","what":"Gaussian processes","title":"Base walkthrough","text":"","code":"corf2 = new(covf_mat25) corf3 = new(covf_mat25) corf2$hyp = c(-0.5) corf3$hyp = c(-0.5)  covftot = function(x1,x2){   corf1$cov(x1[,1],x2[,1])*   corf2$cov(x1[,2],x2[,2])*   corf3$cov(x1[,3],x2[,3]) }  cormattot = covftot(x,x) yhat = covftot(xtest,x) %*% solve(cormattot,y) plot(yhat,ytest) hist((ytest-yhat), main=\"test residuals\",      xlab = \"test residuals\") sigma2hat = as.double( t(y) %*% solve(cormattot,y) / length(y))  varpred = sigma2hat * (covftot(xtest,xtest) - t(covftot(x,xtest)) %*%    solve(cormattot,covftot(x,xtest))) hist((ytest-yhat)/sqrt(diag(varpred)), main=\"standarized test residuals\",      xlab = \"standarized test residuals\")"},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/articles/basebasics.html","id":"outermod","dir":"Articles","previous_headings":"mod and base","what":"outermod","title":"Base walkthrough","text":"","code":"om = new(outermod) setcovfs(om, rep(\"mat25\",3))  knotlist = list(seq(0,1,by=0.025),                 seq(0,1,by=0.025),                 seq(0,1,by=0.025)) setknot(om, knotlist) gethyp(om) #> inpt1.scale inpt2.scale inpt3.scale  #>           0           0           0 om$updatehyp(rep(-0.5,3)) gethyp(om) #> inpt1.scale inpt2.scale inpt3.scale  #>        -0.5        -0.5        -0.5"},{"path":"https://mattplumlee.github.io/outerbase/articles/basebasics.html","id":"outerbase","dir":"Articles","previous_headings":"mod and base","what":"outerbase","title":"Base walkthrough","text":"outerbase equivalent basis matrix fast computation built ","code":"ob = new(outerbase,           om, #give it the outermod (reference)           x) #give it the input matrix basis_func = ob$getbase(1) matplot(x[,1],basis_func[,1:4],          type='l', ylab=\"func\", xlab=\"first dim\")"},{"path":"https://mattplumlee.github.io/outerbase/articles/basebasics.html","id":"outermod-and-outerbase","dir":"Articles","previous_headings":"mod and base","what":"outermod and outerbase","title":"Base walkthrough","text":"","code":"p = 60 terms = om$selectterms(p) print(terms) #>       [,1] [,2] [,3] #>  [1,]    0    0    0 #>  [2,]    0    0    1 #>  [3,]    1    0    0 #>  [4,]    0    1    0 #>  [5,]    0    1    1 #>  [6,]    1    0    1 #>  [7,]    1    1    0 #>  [8,]    0    0    2 #>  [9,]    0    2    0 #> [10,]    2    0    0 #> [11,]    1    1    1 #> [12,]    0    3    0 #> [13,]    0    2    1 #> [14,]    0    1    2 #> [15,]    3    0    0 #> [16,]    1    2    0 #> [17,]    2    1    0 #> [18,]    2    0    1 #> [19,]    1    0    2 #> [20,]    0    0    3 #> [21,]    0    4    0 #> [22,]    0    0    4 #> [23,]    4    0    0 #> [24,]    2    1    1 #> [25,]    1    0    3 #> [26,]    0    3    1 #> [27,]    1    2    1 #> [28,]    1    3    0 #> [29,]    3    1    0 #> [30,]    3    0    1 #> [31,]    0    1    3 #> [32,]    1    1    2 #> [33,]    2    2    0 #> [34,]    0    2    2 #> [35,]    2    0    2 #> [36,]    5    0    0 #> [37,]    0    0    5 #> [38,]    0    5    0 #> [39,]    1    4    0 #> [40,]    0    4    1 #> [41,]    4    1    0 #> [42,]    1    0    4 #> [43,]    4    0    1 #> [44,]    0    1    4 #> [45,]    1    1    3 #> [46,]    1    3    1 #> [47,]    3    1    1 #> [48,]    6    0    0 #> [49,]    0    3    2 #> [50,]    0    2    3 #> [51,]    0    0    6 #> [52,]    3    2    0 #> [53,]    3    0    2 #> [54,]    2    1    2 #> [55,]    1    2    2 #> [56,]    2    2    1 #> [57,]    2    3    0 #> [58,]    0    6    0 #> [59,]    2    0    3 #> [60,]    1    5    0 basismat = ob$getmat(terms)   basevec = ob$getbase(1)[,terms[5,1]+1]*   ob$getbase(2)[,terms[5,2]+1]*   ob$getbase(3)[,terms[5,3]+1] cbind(basevec[1:5],basismat[1:5,5]) #>             [,1]        [,2] #> [1,] -0.07894099 -0.07894099 #> [2,] -0.24392290 -0.24392290 #> [3,]  0.25193500  0.25193500 #> [4,]  0.13918465  0.13918465 #> [5,]  0.69929083  0.69929083 covcoeff = as.vector(om$getvar(terms))"},{"path":"https://mattplumlee.github.io/outerbase/articles/basebasics.html","id":"outerbase-inference","dir":"Articles","previous_headings":"","what":"outerbase inference","title":"Base walkthrough","text":"","code":"cormatob = basismat %*% diag(covcoeff ) %*% t(basismat)  print(round(cormatob[1:5,1:5],4)) #>        [,1]   [,2]   [,3]   [,4]   [,5] #> [1,] 0.9997 0.9252 0.7889 0.7565 0.7545 #> [2,] 0.9252 0.9998 0.8745 0.9306 0.6312 #> [3,] 0.7889 0.8745 0.9998 0.8271 0.6569 #> [4,] 0.7565 0.9306 0.8271 0.9997 0.4900 #> [5,] 0.7545 0.6312 0.6569 0.4900 0.9997 print(round(cormattot[1:5,1:5],4)) #>        [,1]   [,2]   [,3]   [,4]   [,5] #> [1,] 1.0000 0.9251 0.7889 0.7566 0.7545 #> [2,] 0.9251 1.0000 0.8745 0.9305 0.6312 #> [3,] 0.7889 0.8745 1.0000 0.8271 0.6569 #> [4,] 0.7566 0.9305 0.8271 1.0000 0.4899 #> [5,] 0.7545 0.6312 0.6569 0.4899 1.0000 cormatob = basismat %*% diag(covcoeff) %*% t(basismat)  paraep = 10^(-2) postcov = solve(1/paraep * t(basismat) %*% basismat +                    1/sigma2hat*diag(1/covcoeff)) coeffest = postcov %*% (1/paraep * t(basismat) %*% y) paraep = 10^(-2) postcov = solve(1/paraep * t(basismat) %*% basismat +                    1/sigma2hat*diag(1/covcoeff)) coeffest = postcov %*% (1/paraep * t(basismat) %*% y)"},{"path":"https://mattplumlee.github.io/outerbase/articles/basebasics.html","id":"predictions-and-comparison","dir":"Articles","previous_headings":"","what":"Predictions and comparison","title":"Base walkthrough","text":"","code":"obtest = new(outerbase,           om, #give it the outermod (reference)           xtest) #give it the input matrix  basistest = obtest$getmat(terms) yhatob = basistest %*% coeffest par(mfrow=c(1,2)) plot(yhat,ytest, main = \"typical gp\") plot(yhatob,ytest, main = \"outerbase equiv.\") par(mfrow=c(1,2)) hist(ytest-yhat, main=\"typical gp\",      xlab = \"test residuals\") hist(ytest-yhatob, main=\"outerbase equiv.\",      xlab = \"test residuals\") varpredob = basistest %*% postcov %*% t(basistest)  par(mfrow=c(1,2)) hist((ytest-yhat)/sqrt(diag(varpred)), main=\"typical gp\",      xlab = \"standarized test residuals\") hist((ytest-yhatob)/sqrt(diag(varpredob)), main=\"outerbase equiv.\",      xlab = \"standarized test residuals\")"},{"path":"https://mattplumlee.github.io/outerbase/articles/gettingstarted.html","id":"covariance-functions","dir":"Articles","previous_headings":"","what":"Covariance functions","title":"Getting started","text":"Type listcov discover covariance functions deployed. curious , ?covf_covname. Note checks make sure mess entry point, examples .","code":"listcov() #> [1] \"mat25pow\" \"mat25\"    \"mat25ang\" gpm = fitob(x, y, numb = 250, covnames=rep(\"elephant\",5)) #> Error in fitob(x, y, numb = 250, covnames = rep(\"elephant\", 5)):  #>  cov names must be same size as columns in x gpm = fitob(x, y, numb = 250, covnames=rep(\"elephant\",8)) #> Error in .checkcov(covnames[k], x[, k]):  #>  covariances must be from listcov() gpm = fitob(100*x, y, numb = 250, covnames=rep(\"mat25pow\",8)) #> Error in .checkcov(covnames[k], x[, k]):  #>  x ranges exceed limits of covariance functions  #>  the limits are between 0 and 1   #>  try rescaling gpm = fitob(0.001*x, y, numb = 250, covnames=rep(\"mat25pow\",8)) #> Error in .checkcov(covnames[k], x[, k]):  #>  x are too small for ranges #>  the limits are between 0 and 1   #>  try rescaling"},{"path":"https://mattplumlee.github.io/outerbase/articles/gettingstarted.html","id":"building","dir":"Articles","previous_headings":"","what":"Building","title":"Getting started","text":"","code":"# gpm = fitob(x, y, numb = 250) does same thing gpm = fitob(x, y, numb = 250, covnames=rep(\"mat25pow\",8))"},{"path":"https://mattplumlee.github.io/outerbase/articles/gettingstarted.html","id":"prediction","dir":"Articles","previous_headings":"","what":"Prediction","title":"Getting started","text":"","code":"predtr = predob(gpm, x) rmsetr = sqrt(mean((y-predtr$mean)^2)) plot(predtr$mean, y, main= paste(\"training \\n RMSE = \",                                      round(rmsetr,3)),      xlab = \"prediction\", ylab = \"actual\") ytrue = obtest_borehole8d(x) rmsetr = sqrt(mean((ytrue-predtr$mean)^2)) plot(predtr$mean, ytrue, main= paste(\"oracle \\n RMSE = \",                                      round(rmsetr,3)),      xlab = \"prediction\", ylab = \"actual\") predtest = predob(gpm, xtest)  rmsetr = sqrt(mean((ytest-predtest$mean)^2)) plot(predtest$mean, ytest, main= paste(\"testing \\n RMSE = \",                                      round(rmsetr,3)),      xlab = \"prediction\", ylab = \"actual\") hist((ytest-predtest$mean),main=\"testing \\n  residuals\",xlab=\"residuals\") hist((ytest-predtest$mean)/sqrt(predtest$var),      main=\"testing \\n standarized residuals\",xlab=\"standarized residuals\")"},{"path":"https://mattplumlee.github.io/outerbase/articles/speed.html","id":"comparison-of-results","dir":"Articles","previous_headings":"","what":"Comparison of results","title":"Speeding up inference","text":"","code":"par(mfrow=c(1,2)) rmse_slow = sqrt(mean((ytest-yhat_slow)^2)) hist((ytest-yhat_slow), main=paste(\"slow method \\n rmse:\",                                      round(rmse_slow,3),                                    \", time:\",                                    round(t_slow[3],2),'s'),      xlab = \"prediction residuals\") rmse_fast = sqrt(mean((ytest-yhat_fast)^2)) hist((ytest-yhat_fast), main=paste(\"fast method \\n rmse =\",                                       round(rmse_fast,3),                                    \", time:\",                                    round(t_fast[3],2),'s'),       xlab = \"prediction residuals\")"},{"path":"https://mattplumlee.github.io/outerbase/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Plumlee. Author, maintainer.","code":""},{"path":"https://mattplumlee.github.io/outerbase/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Plumlee M (2022). outerbase: outerbase. https://mattplumlee.github.io/outerbase, https://github.com/MattPlumlee/outerbase.","code":"@Manual{,   title = {outerbase: outerbase},   author = {Matthew Plumlee},   year = {2022},   note = {https://mattplumlee.github.io/outerbase, https://github.com/MattPlumlee/outerbase}, }"},{"path":"https://mattplumlee.github.io/outerbase/index.html","id":"outerbase","dir":"","previous_headings":"","what":"outerbase","title":"outerbase","text":"outebase package creates high-dimensional approximations using outer product basis function structure. can used construct predictors high-dimensional inputs stable consistent remains accurate massive data leverages large parallel computing resources accommodates flexible data generation predictors can rendered flexible accuracy depending available resources.","code":"# Install development version from GitHub #devtools::install_github(\"mattplumlee/outerbase\")"},{"path":"https://mattplumlee.github.io/outerbase/reference/BFGS_lpdf.html","id":null,"dir":"Reference","previous_headings":"","what":"BFGS lpdf — BFGS_lpdf","title":"BFGS lpdf — BFGS_lpdf","text":"wrapper codeBFGS_std useful easily calling  parameter optimization package lines possible. Note om logpdf set optimal  parameters, return simply information.","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/BFGS_lpdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BFGS lpdf — BFGS_lpdf","text":"","code":"BFGS_lpdf(om, logpdf, rho = list(), newt = F, ...)"},{"path":"https://mattplumlee.github.io/outerbase/reference/BFGS_lpdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BFGS lpdf — BFGS_lpdf","text":"om outermod object logpdf lpdf object rho initial point, initialized objects needed newt bool Newtons method used ... additional parameters passed BFGS_std","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/BFGS_lpdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BFGS lpdf — BFGS_lpdf","text":"list information optimization","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/BFGS_std.html","id":null,"dir":"Reference","previous_headings":"","what":"BFGS standard — BFGS_std","title":"BFGS standard — BFGS_std","text":"generic minimization function funcw takes list rho using Broyden-Fletcher-Goldfarb-Shanno algorithm. Useful hyperparameter optimization handles infs  fairly easily.","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/BFGS_std.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BFGS standard — BFGS_std","text":"","code":"BFGS_std(funcw, rho, ..., verbose = 0)"},{"path":"https://mattplumlee.github.io/outerbase/reference/BFGS_std.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BFGS standard — BFGS_std","text":"funcw object optimize rho initial point ... additional parameters passed funcw verbose Integer 0-3 larger prints information","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/BFGS_std.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BFGS standard — BFGS_std","text":"list information optimization","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/covf.html","id":null,"dir":"Reference","previous_headings":"","what":"covariance function class — covf","title":"covariance function class — covf","text":"base class designed handle specific features  covariances needed outerbase.  Polymorphism allows implied  methods used across several similar classes.","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/covf.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"covariance function class — covf","text":"covf$hyp hyperparameters specific correlation function covf$lowbnd,covf$uppbnd upper lower bounds inputs  covariance function. covf$cov(x1,x2) returns covariance matrix two vectors  inputs x1 x2 covf$covdiag(x1) returns diagonal covariance matrix  x1 covf$cov_gradhyp(x1,x2) returns cube gradient cov  respect covariance hyperparameters","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/covf_mat25.html","id":null,"dir":"Reference","previous_headings":"","what":"Matern covariance function — covf_mat25","title":"Matern covariance function — covf_mat25","text":"standard Matern covariance function form $$c(x_1,x_2) = (1+ |h| + h^2/3) \\exp(-|h|) $$ \\(h = (x_1-x_2)/\\rho\\) \\(\\rho\\)=exp(2*hyp[0]).","code":"covf = new(covf_mat25)"},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/covf_mat25ang.html","id":null,"dir":"Reference","previous_headings":"","what":"Matern covariance function with angular transform — covf_mat25ang","title":"Matern covariance function with angular transform — covf_mat25ang","text":"standard Matern covariance function power transformation form $$c(x_1,x_2) = (1+ |h| + h^2/3) \\exp(-|h|) $$ $$h = (\\sin(x_1)-\\sin(x_2))^2/\\rho_s +  (\\cos(x_1)-\\cos(x_2))^2/\\rho_c,.$$ hyp two dimensional vector  \\(\\rho_s\\)=exp(2*hyp[0]) \\(\\rho_c\\)=exp(2*hyp[1]).","code":"covf = new(covf_mat25ang)"},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/covf_mat25pow.html","id":null,"dir":"Reference","previous_headings":"","what":"Matern covariance function with power transform — covf_mat25pow","title":"Matern covariance function with power transform — covf_mat25pow","text":"standard Matern covariance function power transformation form $$c(x_1,x_2) = (1+ |h| + h^2/3) \\exp(-|h|) $$ \\(h = (x_1^\\alpha-x_2^\\alpha)/\\rho\\) hyp two  dimensional vector \\(\\rho\\)=exp(2*hyp[0]+0.25*hyp[1]) \\(\\alpha\\)=exp(2*hyp[0]).","code":"covf = new(covf_mat25pow)"},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/fitob.html","id":null,"dir":"Reference","previous_headings":"","what":"fit an outerbase — fitob","title":"fit an outerbase — fitob","text":"fit outerbase","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/fitob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit an outerbase — fitob","text":"","code":"fitob(x, y, numb = 100, covnames = NULL)"},{"path":"https://mattplumlee.github.io/outerbase/reference/fitob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit an outerbase — fitob","text":"x n d sized matrix inputs y n length vector outputs numb size basis use covnames d length vector covariance names","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/fitob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit an outerbase — fitob","text":"Saving important model information","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/gethyp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the hyperparameters — gethyp","title":"Get the hyperparameters — gethyp","text":"function gets current hyperparameters outermod object.  formats way makes reading `R` helpful.","code":"hyp = gethyp(om)"},{"path":"https://mattplumlee.github.io/outerbase/reference/gethyp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the hyperparameters — gethyp","text":"om outermod object","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/gethyp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the hyperparameters — gethyp","text":"","code":"om = new(outermod) setcovfs(om, c(\"mat25\", \"mat25\", \"mat25\")) hyp = gethyp(om) print(hyp) #> inpt1.scale inpt2.scale inpt3.scale  #>           0           0           0"},{"path":"https://mattplumlee.github.io/outerbase/reference/getpara.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the model parameters — getpara","title":"Get the model parameters — getpara","text":"function gets current parameters lpdf object.   formats way makes reading `R` helpful.","code":"para = getpara(loglik)"},{"path":"https://mattplumlee.github.io/outerbase/reference/getpara.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the model parameters — getpara","text":"lpdf logpdf object","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/listcov.html","id":null,"dir":"Reference","previous_headings":"","what":"list all covariance functions — listcov","title":"list all covariance functions — listcov","text":"list covariance functions","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/listcov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"list all covariance functions — listcov","text":"","code":"listcov()"},{"path":"https://mattplumlee.github.io/outerbase/reference/listcov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"list all covariance functions — listcov","text":"list names covariance functions recommend edition.  first default.","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/loglik_gauss.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian errors, large scale — loglik_gauss","title":"Gaussian errors, large scale — loglik_gauss","text":"standard model form $$y = \\langle \\phi(x), \\theta \\rangle + \\varepsilon, \\varepsilon \\sim  N(0,\\sigma^2)$$ \\(\\phi(x)\\) basis, \\(\\theta\\) coefficient vector, \\(\\varepsilon\\) unseen noise vector.  parameter vector length 1  para \\(= \\log(\\sigma)\\).  slightly (sometimes) version loglik_std  allows can handle diagonal variational  inference.","code":"loglik = new(loglik_gauss, om, terms, y, x)"},{"path":"https://mattplumlee.github.io/outerbase/reference/loglik_gauss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian errors, large scale — loglik_gauss","text":"om outermod object referred terms matrix terms, must many columns dims  om y vector observations x matrix predictors, must many columns dims  om number rows y","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/loglik_gda.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian errors with diagonal adjustment — loglik_gda","title":"Gaussian errors with diagonal adjustment — loglik_gda","text":"standard model form $$y = \\langle \\phi(x), \\theta \\rangle + \\delta(x) + \\varepsilon, \\delta(x) \\sim N(0, \\lambda g(x)), \\varepsilon \\sim N(0,\\sigma^2)$$ \\(\\phi(x)\\) basis, \\(\\theta\\) coefficient vector, \\(\\delta(x)\\) unseen vector corresponding unmodeled  variance \\(\\lambda g(x)\\), \\(\\varepsilon\\) unseen noise vector. parameter vector length 2  \\(\\sigma=\\) exp(para[0]) \\(\\lambda=\\)exp(2 para[1]).","code":"loglik = new(loglik_gda, om, terms, y, x)"},{"path":"https://mattplumlee.github.io/outerbase/reference/loglik_gda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian errors with diagonal adjustment — loglik_gda","text":"om outermod object referred terms matrix terms, must many columns dims  om y vector observations x matrix predictors, must many columns dims  om number rows y","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/loglik_std.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian errors — loglik_std","title":"Gaussian errors — loglik_std","text":"standard model form $$y = \\langle \\phi(x), \\theta \\rangle + \\varepsilon, \\varepsilon \\sim  N(0,\\sigma^2)$$ \\(\\phi(x)\\) basis, \\(\\theta\\) coefficient vector, \\(\\varepsilon\\) unseen noise vector. parameter vector length 1  para \\(= \\log(\\sigma)\\).  slightly slower (sometimes)  version loglik_gauss allows complete marginal  inference.","code":"loglik = new(loglik_std, om, terms, y, x)"},{"path":"https://mattplumlee.github.io/outerbase/reference/loglik_std.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian errors — loglik_std","text":"om outermod object referred terms matrix terms, must many columns dims  om y vector observations x matrix predictors, must many columns dims  om number rows y","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/logpr_gauss.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian prior — logpr_gauss","title":"Gaussian prior — logpr_gauss","text":"standard model coefficents drawn independently $$ \\theta_i \\sim N(0, \\rho c_i)$$ \\(c_i\\) variance supplied om $$th term.  parameter vector length 1  \\(\\rho=\\) exp(para[0]).","code":"logpr = new(logpr_gauss, om, terms)"},{"path":"https://mattplumlee.github.io/outerbase/reference/logpr_gauss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian prior — logpr_gauss","text":"om outermod object referred terms matrix terms, must many columns dims  om","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/lpdf-cash-optcg.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization via Conjugate Gradient — lpdf$optcg","title":"Optimization via Conjugate Gradient — lpdf$optcg","text":"optimizes coefficient vector coeff using conjugate gradient.  currently designed quadratic lpdf objects.","code":"lpdf$optcg(tol,epoch)"},{"path":"https://mattplumlee.github.io/outerbase/reference/lpdf-cash-optcg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization via Conjugate Gradient — lpdf$optcg","text":"tol positive double representing tolerance, default  0.001. epoch positive integer representing maximum number steps  conjugate gradient take.","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/lpdf-cash-optnewton.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization via Newton's Method — lpdf$optnewton","title":"Optimization via Newton's Method — lpdf$optnewton","text":"optimizes coefficient vector coeff using Newton's Method.   currently designed quadratic lpdf objects.   take single step.","code":"lpdf$optnewton()"},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/lpdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Log probability density function class — lpdf","title":"Log probability density function class — lpdf","text":"base class designed handle learning  underlying coefficients, hyperparameters, parameters associated specific learning instance.  Polymorphism allows implied methods  used across several similar classes.","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/lpdf.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Log probability density function class — lpdf","text":"lpdf$val current value lpdf$para current model parameters lpdf$coeff current coefficients lpdf$compute_val calling update, compute value store  val lpdf$grad current gradient respect coefficients lpdf$gradhyp current gradient respect covariance hyperparameters lpdf$gradpara current gradient respect model parameters lpdf$compute_grad calling update, compute gradient  respect coefficients store grad lpdf$compute_gradhyp calling update, compute gradient respect covariance hyparameters store gradhyp lpdf$compute_gradpara calling update, compute gradient respect model parameters store gradpara lpdf$update(coeff) update using new coefficients lpdf$optcg(tol,epoch) optimization respect coefficients  via conjugate gradient lpdf$optnewton() optimization via matrix inversion, one Newton  step lpdf$updateom() update based recent version outermod lpdf$updatepara(para) update using new model parameters lpdf$updateterms(terms) update using new terms lpdf$hess() returns hessian respect  coefficients lpdf$hessgradhyp() returns gradient hess() respect  covariance hyperparameters lpdf$hessgradpara() returns gradient hess() respect  model parameters lpdf$diaghess() returns diagonal hessian  respect coefficients lpdf$diaghessgradhyp() returns gradient diaghess() ","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/lpdfvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector of lpdf objects — lpdfvec","title":"Vector of lpdf objects — lpdfvec","text":"class contains two lpdf object can  manipulated single object.  presumes based outermod object, thus share hyperparameters.  However model parameters concatenated.  Currently also includes variations marginal adjustments. Currently designed pair, ordering arbitrary.","code":"logpdf = new(lpdfvec, loglik, logpr)"},{"path":"https://mattplumlee.github.io/outerbase/reference/lpdfvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector of lpdf objects — lpdfvec","text":"loglik one reference lpdf object logpr another reference lpdf object shares  outermod  loglik","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/lpdfvec.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Vector of lpdf objects — lpdfvec","text":"lpdfvec$domarg boolean controls marginal adjustment  done","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/obtest_borehole3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Three dim borehole example — obtest_borehole3d","title":"Three dim borehole example — obtest_borehole3d","text":"three dimensional Borehole function used illustrations.","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/obtest_borehole3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Three dim borehole example — obtest_borehole3d","text":"","code":"obtest_borehole3d(x)"},{"path":"https://mattplumlee.github.io/outerbase/reference/obtest_borehole3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Three dim borehole example — obtest_borehole3d","text":"x n 3 vector inputs","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/obtest_borehole3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Three dim borehole example — obtest_borehole3d","text":"length n vector outputs","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/obtest_borehole8d.html","id":null,"dir":"Reference","previous_headings":"","what":"Eight dim borehole example — obtest_borehole8d","title":"Eight dim borehole example — obtest_borehole8d","text":"eight dimensional Borehole function used illustrations.","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/obtest_borehole8d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eight dim borehole example — obtest_borehole8d","text":"","code":"obtest_borehole8d(x)"},{"path":"https://mattplumlee.github.io/outerbase/reference/obtest_borehole8d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Eight dim borehole example — obtest_borehole8d","text":"x n 8 vector inputs","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/obtest_borehole8d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Eight dim borehole example — obtest_borehole8d","text":"length n vector outputs","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-build.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds the outerbase — outerbase$build","title":"Builds the outerbase — outerbase$build","text":"Build (re-build) basis based recent evaluation  outermod.","code":"outerbase$build()"},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-getbase.html","id":null,"dir":"Reference","previous_headings":"","what":"Get base functions — outerbase$getbase","title":"Get base functions — outerbase$getbase","text":"Returns basis dimension","code":"basis_func = outerbase$getbase(k)"},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-getbase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get base functions — outerbase$getbase","text":"k integer corresponds dimension.","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-getbase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get base functions — outerbase$getbase","text":"basis_func matrix evaluated basis functions  dimension.  Designed mostly visualization.","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-getmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get basis matrix — outerbase$getmat","title":"Get basis matrix — outerbase$getmat","text":"Returns basis matrix","code":"basismat = outerbase$getmat(terms)"},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-getmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get basis matrix — outerbase$getmat","text":"terms matrix terms","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-getmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get basis matrix — outerbase$getmat","text":"basismat matrix evaluated basis functions based  terms.","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-matmul.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix multiply — outerbase$matmul","title":"Matrix multiply — outerbase$matmul","text":"Multiplies basis times vector without building basis  matrix.","code":"b = outerbase$matmul(terms, a)"},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-matmul.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix multiply — outerbase$matmul","text":"terms matrix terms vector length rows terms","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-matmul.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix multiply — outerbase$matmul","text":"b vector resulting matrix multiplication","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-tmatmul.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose Matrix multiply — outerbase$tmatmul","title":"Transpose Matrix multiply — outerbase$tmatmul","text":"Multiplies transpose basis times vector without   building basis matrix.","code":"b = outerbase$tmatmul(terms, a)"},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-tmatmul.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose Matrix multiply — outerbase$tmatmul","text":"terms matrix terms vector length rows outerbase","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-cash-tmatmul.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose Matrix multiply — outerbase$tmatmul","text":"b vector resulting matrix multiplication","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-package.html","id":null,"dir":"Reference","previous_headings":"","what":"outerbase — outerbase-package","title":"outerbase — outerbase-package","text":"High-dimensional function approximation using outer product models.","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"outerbase — outerbase-package","text":"Maintainer: Matthew Plumlee mplumlee@northwestern.edu","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase.html","id":null,"dir":"Reference","previous_headings":"","what":"Outer product-type basis — outerbase","title":"Outer product-type basis — outerbase","text":"Object handles basis given set points  x.","code":"ob = new(outerbase, om, x)"},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outer product-type basis — outerbase","text":"x matrix predictors, must many columns dims  om","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Outer product-type basis — outerbase","text":"nthreads number threads omp use outerbase$getbase(k) get dimensions basis  functions outerbase$getmat(terms) get basis matrix  terms outerbase$build() (re)build basis object outerbase$matmul(terms,) matrix multiply without  building basis matrix outerbase$tmatmul(terms,) transpose matrix multiply  without building basis matrix","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/outerbase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outer product-type basis — outerbase","text":"","code":"om = new(outermod) setcovfs(om, c(\"mat25\", \"mat25\", \"mat25\")) setknot(om,          list(seq(0,1,by=0.025),seq(0,1,by=0.025),seq(0,1,by=0.025))) x = matrix(runif(10*3),ncol=3) ob = new(outerbase, om, x) terms = om$selectterms(40) basismat = ob$getmat(terms)"},{"path":"https://mattplumlee.github.io/outerbase/reference/outermod-cash-getvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variance of coefficients — outermod$getvar","title":"Get variance of coefficients — outermod$getvar","text":"Returns variance coefficients associated terms.","code":"coeffvar = outermod$getvar(terms)"},{"path":"https://mattplumlee.github.io/outerbase/reference/outermod-cash-getvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variance of coefficients — outermod$getvar","text":"terms matrix terms","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/outermod-cash-getvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variance of coefficients — outermod$getvar","text":"coeffvar vector variances coefficient","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/outermod-cash-selectterms.html","id":null,"dir":"Reference","previous_headings":"","what":"Select optimal terms — outermod$selectterms","title":"Select optimal terms — outermod$selectterms","text":"Selects best terms given current outermod","code":"terms = om$selectterms(numterms)"},{"path":"https://mattplumlee.github.io/outerbase/reference/outermod-cash-selectterms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select optimal terms — outermod$selectterms","text":"numterms Number basis terms desired","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/outermod-cash-selectterms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select optimal terms — outermod$selectterms","text":"terms matrix terms","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/outermod-cash-updatehyp.html","id":null,"dir":"Reference","previous_headings":"","what":"Update hyperparameters — outermod$updatehyp","title":"Update hyperparameters — outermod$updatehyp","text":"Updates hyperparameters","code":"outermod$updatehyp(hyp)"},{"path":"https://mattplumlee.github.io/outerbase/reference/outermod-cash-updatehyp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update hyperparameters — outermod$updatehyp","text":"hyp vector hyperparameters","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/outermod.html","id":null,"dir":"Reference","previous_headings":"","what":"Outer product-type model — outermod","title":"Outer product-type model — outermod","text":"Type name class see methods.","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/outermod.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Outer product-type model — outermod","text":"setcovfs set covariance functions setknot set knot points gethyp get hyperparameters outermod$updatehyp update hyperparameters outermod$selectterms find best terms outermod$getvar find variances coefficients","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/outermod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outer product-type model — outermod","text":"","code":"om = new(outermod) setcovfs(om, c(\"mat25\", \"mat25\", \"mat25\")) setknot(om,          list(seq(0,1,by=0.01),seq(0,1,by=0.01),seq(0,1,by=0.01))) terms = om$selectterms(40) coeffvar =om$getvar(terms) hyp = gethyp(om) hyp[1:2] = 0.5 om$updatehyp(hyp) coeffvar = om$getvar(terms)"},{"path":"https://mattplumlee.github.io/outerbase/reference/predictor.html","id":null,"dir":"Reference","previous_headings":"","what":"prediction class — predictor","title":"prediction class — predictor","text":"base class design allow coherent building predictions across multiple models.  Unlike many base classes  package, meant directly used.","code":"pred = new(predictor, logpdf)"},{"path":"https://mattplumlee.github.io/outerbase/reference/predictor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prediction class — predictor","text":"logpdf lpdf instance build predictor","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/predictor.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"prediction class — predictor","text":"predictor$update(x) update current input prediction predictor$mean() return current mean prediction predictor$var() return current var prediction","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/predob.html","id":null,"dir":"Reference","previous_headings":"","what":"pred from an outerbase — predob","title":"pred from an outerbase — predob","text":"pred outerbase","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/predob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pred from an outerbase — predob","text":"","code":"predob(obmodel, x)"},{"path":"https://mattplumlee.github.io/outerbase/reference/predob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pred from an outerbase — predob","text":"obmodel output fitob x new m d sized matrix inputs","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/predob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pred from an outerbase — predob","text":"list mean var new x","code":""},{"path":"https://mattplumlee.github.io/outerbase/reference/setcovfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Set covariance functions — setcovfs","title":"Set covariance functions — setcovfs","text":"function sets covariance functions outermod object, first thing one creating outermod object.//'","code":"setcovfs(om, covnames)"},{"path":"https://mattplumlee.github.io/outerbase/reference/setcovfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set covariance functions — setcovfs","text":"om outermod object covnames vector strings covariance functions","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/setcovfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set covariance functions — setcovfs","text":"","code":"om = new(outermod) setcovfs(om, c(\"mat25\", \"mat25\", \"mat25\")) setcovfs(om, c(\"mat25\", \"mat25pow\", \"mat25\", \"mat25ang\"))"},{"path":"https://mattplumlee.github.io/outerbase/reference/setknot.html","id":null,"dir":"Reference","previous_headings":"","what":"Set knot points — setknot","title":"Set knot points — setknot","text":"function sets knot points estimate eigenfunctions eigenvalues. naturally check knot points dimension covariance functions.  also check  knot points within reasonable bounds covariance functions.//'","code":"setknot(om, knotslist)"},{"path":"https://mattplumlee.github.io/outerbase/reference/setknot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set knot points — setknot","text":"om outermod object knotslist list one dimensional vectors","code":""},{"path":[]},{"path":"https://mattplumlee.github.io/outerbase/reference/setknot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set knot points — setknot","text":"","code":"om = new(outermod) setcovfs(om, c(\"mat25\", \"mat25\", \"mat25\")) setknot(om,          list(seq(0,1,by=0.01),seq(0,1,by=0.01),seq(0,1,by=0.01)))"},{"path":"https://mattplumlee.github.io/outerbase/news/index.html","id":"outerbase-010","dir":"Changelog","previous_headings":"","what":"outerbase 0.1.0","title":"outerbase 0.1.0","text":"Initial release! Contains base functionality.","code":""}]
